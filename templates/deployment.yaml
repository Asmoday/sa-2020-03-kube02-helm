apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-dz02-helm.fullname" . }}
  labels:
    {{- include "kube-dz02-helm.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "kube-dz02-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "kube-dz02-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-dz02-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: check-db-migration
        image: alpine:latest
        env:
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "kube-dz02-helm.fullname" . }}-configmap
              key: username
        - name: DB_VERSION
          value: {{ .Values.postgresql.version | quote }}
        - name: DB_HOSTNAME
          value: {{ .Release.Name }}-postgresql
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: {{ include "kube-dz02-helm.fullname" . }}-configmap  
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
                name: {{ .Release.Name }}-postgresql
                key: postgresql-password
        command:
          - sh
          - "-c"
          - |
            apk add postgresql-client && \
            until [[ `PGPASSWORD=$DB_PASSWORD \
            psql -XAt -h $DB_HOSTNAME -U $DB_USER -c "select exists (select from information_schema.tables  where table_name = 'users')"` == "t" ]];
            do
              echo waiting for database;
              sleep 2;
            done;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: {{ include "kube-dz02-helm.fullname" . }}-configmap         
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: username
                  name: {{ include "kube-dz02-helm.fullname" . }}-configmap           
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgresql-password
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
